// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Uptime.Monitoring.Data;

namespace Uptime.Monitoring.Data.Migrations
{
    [DbContext(typeof(UptimeMonitoringContext))]
    [Migration("20191004132839_init_monitoring")]
    partial class init_monitoring
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.AlertContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<int>("NotificationType");

                    b.Property<int>("Type");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AlertContacts");
                });

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.Monitor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthType");

                    b.Property<bool>("ContainsWord");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Interval");

                    b.Property<string>("Keyword");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<long?>("ServerId");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.Property<int>("UptimeDay");

                    b.Property<int>("UptimeMonth");

                    b.Property<int>("UptimeWeek");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("Url");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Monitors");
                });

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.MonitorAlertContact", b =>
                {
                    b.Property<long>("MonitorId");

                    b.Property<long>("AlertContactId");

                    b.HasKey("MonitorId", "AlertContactId");

                    b.HasIndex("AlertContactId");

                    b.ToTable("MonitorAlertContacts");
                });

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.MonitoringServer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessKey");

                    b.Property<string>("Host")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("MonitoringServers");
                });

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.UserSettings", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("InformDev");

                    b.Property<bool>("InformFeatures");

                    b.HasKey("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.Monitor", b =>
                {
                    b.HasOne("Uptime.Monitoring.Data.Models.MonitoringServer", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");
                });

            modelBuilder.Entity("Uptime.Monitoring.Data.Models.MonitorAlertContact", b =>
                {
                    b.HasOne("Uptime.Monitoring.Data.Models.AlertContact", "AlertContact")
                        .WithMany("Monitors")
                        .HasForeignKey("AlertContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Uptime.Monitoring.Data.Models.Monitor", "Monitor")
                        .WithMany("AlertContacts")
                        .HasForeignKey("MonitorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
